{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n'use strict';\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n'use strict';\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.getInitialState();\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        // eslint-disable-next-line no-console\n        this.state = initialState;\n        this.score = 0;\n        this.status = 'idle';\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.moveInline('left');\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.moveInline('right');\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.moveBlock('up');\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.moveBlock('down');\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.score = 0;\n                this.status = 'playing';\n                this.addRandomSell();\n                this.addRandomSell();\n            }\n        },\n        {\n            // Add your own methods here\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.status = 'idle';\n                this.score = 0;\n                this.state = this.getInitialState();\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"moveBlock\",\n            value: function moveBlock(direction) {\n                var _this = this;\n                if (this.getStatus() === 'playing') {\n                    var isMove = false;\n                    this.state.forEach(function(row, rowIndex) {\n                        var column = [];\n                        row.forEach(function(_, cellIndex) {\n                            column.push(_this.state[cellIndex][rowIndex]);\n                        });\n                        var notEmptyCells = _this.getNotEmptyCells(column, direction);\n                        notEmptyCells = _this.mergeCells(notEmptyCells, direction);\n                        for(var i = 0; i < 4; i++){\n                            _this.state[i][rowIndex] = notEmptyCells[i] || 0;\n                            if (_this.state[i][rowIndex] !== column[i]) isMove = true;\n                        }\n                    });\n                    if (isMove) {\n                        this.addRandomSell();\n                        this.checkWinLose();\n                    }\n                }\n            }\n        },\n        {\n            key: \"moveInline\",\n            value: function moveInline(direction) {\n                var _this = this;\n                if (this.getStatus() === 'playing') {\n                    var isMove;\n                    this.state.forEach(function(row) {\n                        var oldRow = (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                        var notEmptyCells = _this.getNotEmptyCells(row, direction);\n                        notEmptyCells = _this.mergeCells(notEmptyCells, direction);\n                        row.forEach(function(_, i) {\n                            row[i] = notEmptyCells[i] || 0;\n                        });\n                        if (!oldRow.every(function(cell, index) {\n                            return cell === row[index];\n                        })) isMove = true;\n                    });\n                    if (isMove) {\n                        this.addRandomSell();\n                        this.checkWinLose();\n                    }\n                }\n            }\n        },\n        {\n            key: \"getInitialState\",\n            value: function getInitialState() {\n                return new Array(4).fill(0).map(function() {\n                    return new Array(4).fill(0);\n                });\n            }\n        },\n        {\n            key: \"addRandomSell\",\n            value: function addRandomSell() {\n                var freeIndex = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.state[row][col] === 0) freeIndex.push([\n                        row,\n                        col\n                    ]);\n                }\n                var getRandIndex = Math.floor(Math.random() * freeIndex.length);\n                var getNum = Math.random() < 0.9 ? 2 : 4;\n                var _freeIndex_getRandIndex = (0, $efec029548ccee7f$export$71511d61b312f219)(freeIndex[getRandIndex], 2), newRow = _freeIndex_getRandIndex[0], newCol = _freeIndex_getRandIndex[1];\n                this.state[newRow][newCol] = getNum;\n            }\n        },\n        {\n            key: \"getNotEmptyCells\",\n            value: function getNotEmptyCells(position, direction) {\n                var notEmptyCells = position.filter(function(cell) {\n                    return cell > 0;\n                });\n                if (direction === 'right' || direction === 'down') while(notEmptyCells.length < 4)notEmptyCells.unshift(0);\n                if (direction === 'left' || direction === 'up') while(notEmptyCells.length < 4)notEmptyCells.push(0);\n                return notEmptyCells;\n            }\n        },\n        {\n            key: \"mergeCells\",\n            value: function mergeCells(cells, direction) {\n                for(var i = 0; i < cells.length - 1; i++){\n                    var valueOne = cells[i];\n                    var valueTwo = cells[i + 1];\n                    if (valueOne === valueTwo && valueOne > 0) {\n                        this.score += valueOne + valueTwo;\n                        cells[i] = valueOne + valueTwo;\n                        cells.splice(i + 1, 1);\n                    }\n                }\n                if (direction === 'right' || direction === 'down') return this.getNotEmptyCells(cells, direction);\n                return cells;\n            }\n        },\n        {\n            key: \"hasMove\",\n            value: function hasMove() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    var current = this.state[row][col];\n                    if (current === 0) return true;\n                    if ((row < 3 ? this.state[row + 1][col] : 0) === current) return true;\n                    if ((col < 3 ? this.state[row][col + 1] : 0) === current) return true;\n                // if (current === right) {\n                //   return true;\n                // }\n                // if (current === down) {\n                //   return true;\n                // }\n                // if (down === 0 || right === 0) {\n                //   return true;\n                // }\n                }\n                return false;\n            }\n        },\n        {\n            key: \"checkWinLose\",\n            value: function checkWinLose() {\n                if (this.state.some(function(row) {\n                    return row.includes(2048);\n                })) this.status = 'win';\n                if (!this.hasMove()) this.status = 'lose';\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$buttonStart = document.querySelector('.button.start');\nvar $197cd56b15c33885$var$messageStart = document.querySelector('.message-start');\nvar $197cd56b15c33885$var$messageWin = document.querySelector('.message-win');\nvar $197cd56b15c33885$var$messageLose = document.querySelector('.message-lose');\nvar $197cd56b15c33885$var$gameScore = document.querySelector('.game-score');\nfunction $197cd56b15c33885$var$updatedTable() {\n    var state = $197cd56b15c33885$var$game.getState();\n    var rows = document.querySelectorAll('.field-row');\n    $197cd56b15c33885$var$gameScore.textContent = $197cd56b15c33885$var$game.getScore();\n    state.forEach(function(row, iRow) {\n        row.forEach(function(valueCell, iCell) {\n            var cell = rows[iRow].children[iCell];\n            cell.className = 'field-cell';\n            cell.textContent = '';\n            if (valueCell > 0) {\n                cell.textContent = valueCell;\n                cell.classList.add(\"field-cell--\".concat(valueCell));\n            }\n        });\n    });\n    if ($197cd56b15c33885$var$game.getStatus() === 'win') $197cd56b15c33885$var$messageWin.classList.remove('hidden');\n    else if ($197cd56b15c33885$var$game.getStatus() === 'lose') $197cd56b15c33885$var$messageLose.classList.remove('hidden');\n}\n$197cd56b15c33885$var$buttonStart.addEventListener('click', function() {\n    if ($197cd56b15c33885$var$game.getStatus() === 'idle') {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$buttonStart.classList.remove('start');\n        $197cd56b15c33885$var$buttonStart.classList.add('restart');\n        $197cd56b15c33885$var$buttonStart.textContent = 'Restart';\n        $197cd56b15c33885$var$messageStart.classList.add('hidden');\n    } else {\n        $197cd56b15c33885$var$buttonStart.classList.remove('restart');\n        $197cd56b15c33885$var$buttonStart.classList.add('start');\n        $197cd56b15c33885$var$buttonStart.textContent = 'Start';\n        $197cd56b15c33885$var$messageStart.classList.remove('hidden');\n        $197cd56b15c33885$var$messageLose.classList.add('hidden');\n        $197cd56b15c33885$var$messageWin.classList.add('hidden');\n        $197cd56b15c33885$var$game.restart();\n    }\n    $197cd56b15c33885$var$updatedTable();\n});\ndocument.addEventListener('keydown', function(e) {\n    switch(e.key){\n        case 'ArrowLeft':\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case 'ArrowRight':\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case 'ArrowUp':\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case 'ArrowDown':\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n    }\n    $197cd56b15c33885$var$updatedTable();\n});\n\n})();\n//# sourceMappingURL=index.76d7deb0.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst buttonStart = document.querySelector('.button.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst gameScore = document.querySelector('.game-score');\n\nfunction updatedTable() {\n  const state = game.getState();\n  const rows = document.querySelectorAll('.field-row');\n\n  gameScore.textContent = game.getScore();\n\n  state.forEach((row, iRow) => {\n    row.forEach((valueCell, iCell) => {\n      const cell = rows[iRow].children[iCell];\n\n      cell.className = 'field-cell';\n      cell.textContent = '';\n\n      if (valueCell > 0) {\n        cell.textContent = valueCell;\n        cell.classList.add(`field-cell--${valueCell}`);\n      }\n    });\n  });\n\n  if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nbuttonStart.addEventListener('click', () => {\n  if (game.getStatus() === 'idle') {\n    game.start();\n    buttonStart.classList.remove('start');\n    buttonStart.classList.add('restart');\n    buttonStart.textContent = 'Restart';\n    messageStart.classList.add('hidden');\n  } else {\n    buttonStart.classList.remove('restart');\n    buttonStart.classList.add('start');\n    buttonStart.textContent = 'Start';\n    messageStart.classList.remove('hidden');\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    game.restart();\n  }\n  updatedTable();\n});\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.key) {\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n  }\n  updatedTable();\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState = this.getInitialState()) {\n    // eslint-disable-next-line no-console\n    this.state = initialState;\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  moveLeft() {\n    this.moveInline('left');\n  }\n  moveRight() {\n    this.moveInline('right');\n  }\n  moveUp() {\n    this.moveBlock('up');\n  }\n  moveDown() {\n    this.moveBlock('down');\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.score = 0;\n    this.status = 'playing';\n    this.addRandomSell();\n    this.addRandomSell();\n  }\n\n  // Add your own methods here\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.status = 'idle';\n    this.score = 0;\n    this.state = this.getInitialState();\n  }\n\n  // Add your own methods here\n  moveBlock(direction) {\n    if (this.getStatus() === 'playing') {\n      let isMove = false;\n\n      this.state.forEach((row, rowIndex) => {\n        const column = [];\n\n        row.forEach((_, cellIndex) => {\n          column.push(this.state[cellIndex][rowIndex]);\n        });\n\n        let notEmptyCells = this.getNotEmptyCells(column, direction);\n\n        notEmptyCells = this.mergeCells(notEmptyCells, direction);\n\n        for (let i = 0; i < 4; i++) {\n          this.state[i][rowIndex] = notEmptyCells[i] || 0;\n\n          if (this.state[i][rowIndex] !== column[i]) {\n            isMove = true;\n          }\n        }\n      });\n\n      if (isMove) {\n        this.addRandomSell();\n        this.checkWinLose();\n      }\n    }\n  }\n\n  moveInline(direction) {\n    if (this.getStatus() === 'playing') {\n      let isMove;\n\n      this.state.forEach((row) => {\n        const oldRow = [...row];\n        let notEmptyCells = this.getNotEmptyCells(row, direction);\n\n        notEmptyCells = this.mergeCells(notEmptyCells, direction);\n\n        row.forEach((_, i) => {\n          row[i] = notEmptyCells[i] || 0;\n        });\n\n        if (!oldRow.every((cell, index) => cell === row[index])) {\n          isMove = true;\n        }\n      });\n\n      if (isMove) {\n        this.addRandomSell();\n        this.checkWinLose();\n      }\n    }\n  }\n\n  getInitialState() {\n    return new Array(4).fill(0).map(() => new Array(4).fill(0));\n  }\n\n  addRandomSell() {\n    const freeIndex = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.state[row][col] === 0) {\n          freeIndex.push([row, col]);\n        }\n      }\n    }\n\n    const getRandIndex = Math.floor(Math.random() * freeIndex.length);\n\n    const getNum = Math.random() < 0.9 ? 2 : 4;\n\n    const [newRow, newCol] = freeIndex[getRandIndex];\n\n    this.state[newRow][newCol] = getNum;\n  }\n\n  getNotEmptyCells(position, direction) {\n    const notEmptyCells = position.filter((cell) => cell > 0);\n\n    if (direction === 'right' || direction === 'down') {\n      while (notEmptyCells.length < 4) {\n        notEmptyCells.unshift(0);\n      }\n    }\n\n    if (direction === 'left' || direction === 'up') {\n      while (notEmptyCells.length < 4) {\n        notEmptyCells.push(0);\n      }\n    }\n\n    return notEmptyCells;\n  }\n\n  mergeCells(cells, direction) {\n    for (let i = 0; i < cells.length - 1; i++) {\n      const valueOne = cells[i];\n      const valueTwo = cells[i + 1];\n\n      if (valueOne === valueTwo && valueOne > 0) {\n        this.score += valueOne + valueTwo;\n        cells[i] = valueOne + valueTwo;\n        cells.splice(i + 1, 1);\n      }\n    }\n\n    if (direction === 'right' || direction === 'down') {\n      return this.getNotEmptyCells(cells, direction);\n    }\n\n    return cells;\n  }\n\n  hasMove() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        const current = this.state[row][col];\n\n        if (current === 0) {\n          return true;\n        }\n\n        if ((row < 3 ? this.state[row + 1][col] : 0) === current) {\n          return true;\n        }\n\n        if ((col < 3 ? this.state[row][col + 1] : 0) === current) {\n          return true;\n        }\n        // if (current === right) {\n        //   return true;\n        // }\n\n        // if (current === down) {\n        //   return true;\n        // }\n\n        // if (down === 0 || right === 0) {\n        //   return true;\n        // }\n      }\n    }\n\n    return false;\n  }\n\n  checkWinLose() {\n    if (this.state.some((row) => row.includes(2048))) {\n      this.status = 'win';\n    }\n\n    if (!this.hasMove()) {\n      this.status = 'lose';\n    }\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","getInitialState","instance","Constructor","TypeError","state","score","status","key","value","moveInline","moveBlock","addRandomSell","direction","_this","getStatus","isMove","forEach","row","rowIndex","column","_","cellIndex","push","notEmptyCells","getNotEmptyCells","mergeCells","checkWinLose","oldRow","isArray","iter","Symbol","iterator","every","cell","index","fill","map","freeIndex","col","getRandIndex","Math","floor","random","getNum","_freeIndex_getRandIndex","_s","_e","_i","_arr","_n","_d","next","done","err","newRow","newCol","position","filter","unshift","cells","valueOne","valueTwo","splice","current","some","includes","hasMove","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$buttonStart","document","querySelector","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$gameScore","$197cd56b15c33885$var$updatedTable","getState","rows","querySelectorAll","textContent","getScore","iRow","valueCell","iCell","children","className","classList","add","concat","remove","addEventListener","start","restart","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.76d7deb0.js.map"}